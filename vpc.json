{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This is ntier in aws",
    "Parameters": {
        "vpccidr": {
            "Type": "String",
            "Default": "192.168.0.0/16",
            "Description": "Vpc CidrBlock"
        },
        "web1cidr": {
            "Description": "web1 subnet cidr",
            "Type": "String",
            "Default": "192.168.0.0/24"
        },
        "web2cidr": {
            "Description": "web2 subnet cidr",
            "Type": "String",
            "Default": "192.168.1.0/24"
        },
        "db1cidr": {
            "Description": "db1 subnet cidr",
            "Type": "String",
            "Default": "192.168.2.0/24"
        },
        "db2cidr": {
            "Description": "db2 subnet cidr",
            "Type": "String",
            "Default": "192.168.3.0/24"
        
       
        },
        "engine": {
            "Description": "database engine type",
            "Type": "String",
            "Default": "mysql",
            "AllowedValues": [
                "mysql",
                "postgres"
            ]
        },
        "keypair": {
            "Description": "Keypair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "imageid": {
            "Description": "ami id",
            "Type": "String",
            "Default": "ami-0b584e5449fa1dd56"
        },
        "instancetype": {
            "Description": "instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t3.micro"
            ]
        },
        "createdb": {
            "Description": "Do you want to Create DB?",
            "Type": "String",
            "Default": "No",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        },
        "createvm": {
            "Description": "Do you want to Create Ec2?",
            "Type": "String",
            "Default": "Yes",
            "AllowedValues": [
                "Yes",
                "No"
            ]
        }
    },
    "Mappings": {
        "ubuntuMap": {
            "us-west-2": {
                "2004": "ami-0223246728818f162",
                "2204": "ami-0fcf52bcf5db7b003"
            },
            "ap-south-2": {
                "2004": "ami-0dc2e08b4c26a85a2",
                "2204": "ami-0b584e5449fa1dd56"
            }
        }
    },
    "Conditions": {
        "createRDSInstance": {
            "Fn::Equals": [
                "createdb",
                "Yes"
            ]
        },
        "createWebVM": {
            "Fn::Equals": [
                "createvm",
                "Yes"
            ]
        }
    },
    "Resources": {
        "ntiervpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidr"
                },
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntiervpc"
                    },
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    }
                ]
            }
        },
        "web1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": { "Fn::Select": [0, { "Fn::GetAZs": "" }] },

                "CidrBlock": {
                    "Ref": "web1cidr"
                },  
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web1"
                    },
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    }
                ]
            }
        },
        "web2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": { "Fn::Select": [1, { "Fn::GetAZs": "" }] },

                "CidrBlock": {
                    "Ref": "web2cidr"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web2"
                    },
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    }
                ]
            }
        },
        "db1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": { "Fn::Select": [2, { "Fn::GetAZs": "" }] },

                "CidrBlock": {
                    "Ref": "db1cidr"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db1"
                    },
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    }
                ]
            }
        },
        "db2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": { "Fn::Select": [4, { "Fn::GetAZs": "" }] },

                "CidrBlock": {
                    "Ref": "db2cidr"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db2"
                    },
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    }
                ]
            }
        },
        "rdsDBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "ntierdbsubnetgroup",
                "DBSubnetGroupName": "ntierdbsubnetgroup",
                "SubnetIds": [
                    {
                        "Ref": "db1subnet"
                    },
                    {
                        "Ref": "db2subnet"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    }
                ]
            }
        },
        "ntierdbsg": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "ntierdb security group",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "vpccidr"
                        },
                        "Description": "Allow all incoming connections on 3306",
                        "IpProtocol": "tcp",
                        "FromPort": 3306,
                        "ToPort": 3306
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    }
                ]
            }
        },
        "ntierdb": {
            "Type": "AWS::RDS::DBInstance",
            "Condition": "createRDSInstance",
            "Properties": {
                "AllocatedStorage": 20,
                "DBInstanceClass": "db.t3.micro",
                "AllowMajorVersionUpgrade": false,
                "AutoMinorVersionUpgrade": false,
                "BackupRetentionPeriod": 0,
                "DBInstanceIdentifier": "qtrdsdbinstancefromcf",
                "DBName": "employees",
                "DBSubnetGroupName": {
                    "Ref": "rdsDBSubnetGroup"
                },
                "Engine": {
                    "Ref": "engine"
                },
                "EngineVersion": "8.0.32",
                "MasterUsername": "admin",
                "MasterUserPassword": "adminadmin",
                "MultiAZ": false,
                "Port": "3306",
                "PubliclyAccessible": false,
                "StorageType": "gp2",
                "Tags": [
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    }
                ],
                "VPCSecurityGroups": [
                    {
                        "Ref": "ntierdbsg"
                    }
                ]
            }
        },
        "websg": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This is web sg",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Allow all incoming connections on 80",
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Allow all incoming connections on 22",
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    },
                    {
                        "Key": "Name",
                        "Value": "websg"
                    }
                ]
            }
        },
        "webec2": {
            "Type": "AWS::EC2::Instance",
            "Condition": "createWebVM",
            "Properties": {
                "KeyName": 
                    "ssh_key.pub",
                
                "InstanceType": {
                    "Ref": "instancetype"
                },
                "Monitoring": false,
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": true,
                        "SubnetId": {
                            "Ref": "web1subnet"
                        },
                        "GroupSet": [
                            {
                                "Ref": "websg"
                            }
                        ],
                        "DeviceIndex": "0"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "sudo apt update",
                                "sudo apt install apache2 -y"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    },
                    {
                        "Key": "Name",
                        "Value": "webec2"
                    }
                ]
            }
        },
        "ntierigw": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "InternetGatewayId": {
                    "Ref": "ntierigw"
                }
            }
        },
        "publicrt": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Env",
                        "Value": "Dev"
                    },
                    {
                        "Key": "CreatedBy",
                        "Value": "Cloudformation"
                    }
                ]
            }
        },
        "connecttoigw": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "publicrt"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "ntierigw"
                }
            }
        },
        "web1publicrt": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "web1subnet"
                },
                "RouteTableId": {
                    "Ref": "publicrt"
                }
            }
        },
        "web2publicrt": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "web2subnet"
                },
                "RouteTableId": {
                    "Ref": "publicrt"
                }
            }
        }
    }
    
}

