{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "I am just learning how to use CloudFormation",
    "Parameters": {
        "vpccidr": {
            "Type": "String",
            "Default": "10.0.0.0/16",
            "Description": "This is the default VPC CIDR range"
        },
        "web1cidr": {
            "Type": "String",
            "Default": "10.0.1.0/24",
            "Description": "This is the default subnet1 CIDR range"
        },
        "web2cidr": {
            "Type": "String",
            "Default": "10.0.2.0/24",
            "Description": "This is the default subnet2 CIDR range"
        },
        "db1cidr": {
            "Type": "String",
            "Default": "10.0.3.0/24",
            "Description": "This is the default subnet3 CIDR range"
        },
        "db2cidr": {
            "Type": "String",
            "Default": "10.0.4.0/24",
            "Description": "This is the default subnet4 CIDR range"
        },
        "engine" : {
            "Type" : "String",
            "Default" : "MySQL",
            "Description" : "I am launching the MySQL engine"
        }
    },
    "Resources": {
        "ntiervpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": { "Ref": "vpccidr" },
                "Tags": [
                    { "Key": "name", "Value": "myvpc" },
                    { "Key": "Env", "Value": "Dev" },
                    { "Key": "CreatedBy", "Value": "CloudFormation" }
                ]
            }
        },
        "web1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": { "Ref": "web1cidr" },
                "AvailabilityZone": { "Fn::Select": [0, { "Fn::GetAZs": "" }] },
                "VpcId": { "Ref": "ntiervpc" },
                "Tags": [
                    { "Key": "name", "Value": "web1subnet" },
                    { "Key": "Env", "Value": "Dev" },
                    { "Key": "CreatedBy", "Value": "CloudFormation" }
                ]
            }
        },
        "web2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": { "Ref": "web2cidr" },
                "AvailabilityZone": { "Fn::Select": [1, { "Fn::GetAZs": "" }] },
                "VpcId": { "Ref": "ntiervpc" },
                "Tags": [
                    { "Key": "name", "Value": "web2subnet" },
                    { "Key": "Env", "Value": "Dev" },
                    { "Key": "CreatedBy", "Value": "CloudFormation" }
                ]
            }
        },
        "db1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": { "Ref": "db1cidr" },
                "AvailabilityZone": { "Fn::Select": [2, { "Fn::GetAZs": "" }] },
                "VpcId": { "Ref": "ntiervpc" },
                "Tags": [
                    { "Key": "name", "Value": "db1subnet" },
                    { "Key": "Env", "Value": "Dev" },
                    { "Key": "CreatedBy", "Value": "CloudFormation" }
                ]
            }
        },
        "db2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": { "Ref": "db2cidr" },
                "AvailabilityZone": { "Fn::Select": [3, { "Fn::GetAZs": "" }] },
                "VpcId": { "Ref": "ntiervpc" },
                "Tags": [
                    { "Key": "name", "Value": "db2subnet" },
                    { "Key": "Env", "Value": "Dev" },
                    { "Key": "CreatedBy", "Value": "CloudFormation" }
                ]
            }
        },
        "rdsDBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "This is the ntier DB subnet",
                "SubnetIds": [
                    { "Ref": "db1subnet" },
                    { "Ref": "db2subnet" }
                ],
                "Tags": [
                    { "Key": "name", "Value": "dbsubnetgroup" },
                    { "Key": "Env", "Value": "Dev" },
                    { "Key": "CreatedBy", "Value": "CloudFormation" }
                ]
            }
        },
        "ntierdbsg": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This is the SG for db",
                "SecurityGroupIngress": [ 
                    {
                        "CidrIp": { "Ref": "vpccidr" },
                        "Description": "Allow all incoming connections on 3306",
                        "IpProtocol": "tcp",
                        "FromPort": 3306,
                        "ToPort": 3306
                    }
                ],
                "VpcId": { "Ref": "ntiervpc" },
                "Tags": [
                    { "Key": "Env", "Value": "Dev" },
                    { "Key": "CreatedBy", "Value": "CloudFormation" }
                ]
            }
        },
        "ntierdb": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "AllocatedStorage": 20,
                "DBInstanceClass": "db.t3.micro",
                "AllowMajorVersionUpgrade": false,
                "AutoMinorVersionUpgrade": false,
                "BackupRetentionPeriod": 0,
                "DBInstanceIdentifier": "qtrdsdbinstancefromcf",
                "DBName": "employees",
                "DBSubnetGroupName": { "Ref": "rdsDBSubnetGroup" },
                "Engine": { "Ref": "engine" },
                "EngineVersion": "8.0.32",
                "MasterUsername": "admin",
                "MasterUserPassword": "adminadmin",
                "MultiAZ": false,
                "Port": "3306",
                "PubliclyAccessible": false,
                "StorageType": "gp2",
                "Tags": [
                    { "Key": "Env", "Value": "Dev" },
                    { "Key": "CreatedBy", "Value": "CloudFormation" }
                ],
                "VPCSecurityGroups": [
                    { "Ref": "ntierdbsg" }
                ]
            }
        },
        "myInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    { "Key": "stack", "Value": "test" }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": { "Ref": "myInternetGateway" },
                "VpcId": { "Ref": "ntiervpc" }
            }
        },
        "myRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    { "Key": "stack", "Value": "test" }
                ],
                "VpcId": { "Ref": "ntiervpc" }
            }
        },
        "publcroute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": { "Ref": "myRouteTable" },
                "GatewayId": { "Ref": "myInternetGateway" }
            }
        },
        "web1association": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": { "Ref": "myRouteTable" },
                "SubnetId": { "Ref": "web1subnet" }
            }
        },
        "web2association": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": { "Ref": "myRouteTable" },
                "SubnetId": { "Ref": "web2subnet" }
            }
        },
        "myinstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": "ssh_key.pub",
                "ImageId": "ami-080e1f13689e07408",
                "InstanceType": "t2.micro",
                "Monitoring": "true",
                "Tags": [
                    {
                        "Key": "check",
                        "Value": "notworking"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex",
                                "apt update",
                                "apt install nginx -y"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "PublicIp": {
            "Description": "Public IP address of the EC2 instance",
            "Value": { "Fn::GetAtt": ["myinstance", "PublicIp"] }
        }
    }
}
